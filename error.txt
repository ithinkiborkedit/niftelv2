=== RUN   TestParser_Basic
    parser_test.go:29:                              0: func     "func"
    parser_test.go:29:                              1: IDENTIFIER       "add"
    parser_test.go:29:                              2: (        "("
    parser_test.go:29:                              3: IDENTIFIER       "a"
    parser_test.go:29:                              4: :        ":"
    parser_test.go:29:                              5: IDENTIFIER       "int"
    parser_test.go:29:                              6: ,        ","
    parser_test.go:29:                              7: IDENTIFIER       "b"
    parser_test.go:29:                              8: :        ":"
    parser_test.go:29:                              9: IDENTIFIER       "int"
    parser_test.go:29:                             10: )        ")"
    parser_test.go:29:                             11: ->       "->"
    parser_test.go:29:                             12: IDENTIFIER       "int"
    parser_test.go:29:                             13: {        "{"
    parser_test.go:29:                             14: 
                "\n"
    parser_test.go:29:                             15: return   "return"
    parser_test.go:29:                             16: IDENTIFIER       "a"
    parser_test.go:29:                             17: +        "+"
    parser_test.go:29:                             18: IDENTIFIER       "b"
    parser_test.go:29:                             19: 
                "\n"
    parser_test.go:29:                             20: }        "}"
    parser_test.go:29:                             21: 
                "\n"
    parser_test.go:29:                             22: var      "var"
    parser_test.go:29:                             23: IDENTIFIER       "result"
    parser_test.go:29:                             24: :        ":"
    parser_test.go:29:                             25: IDENTIFIER       "int"
    parser_test.go:29:                             26: =        "="
    parser_test.go:29:                             27: IDENTIFIER       "add"
    parser_test.go:29:                             28: (        "("
    parser_test.go:29:                             29: NUMBER   "5"
    parser_test.go:29:                             30: ,        ","
    parser_test.go:29:                             31: NUMBER   "3"
    parser_test.go:29:                             32: )        ")"
    parser_test.go:29:                             33: 
                "\n"
    parser_test.go:29:                             34: 
                "\n"
    parser_test.go:29:                             35: if       "if"
    parser_test.go:29:                             36: IDENTIFIER       "result"
    parser_test.go:29:                             37: >        ">"
    parser_test.go:29:                             38: NUMBER   "5"
    parser_test.go:29:                             39: {        "{"
    parser_test.go:29:                             40: 
                "\n"
    parser_test.go:29:                             41: IDENTIFIER       "print"
    parser_test.go:29:                             42: (        "("
    parser_test.go:29:                             43: STRING   "\"success\""
    parser_test.go:29:                             44: )        ")"
    parser_test.go:29:                             45: 
                "\n"
    parser_test.go:29:                             46: 
                "\n"
    parser_test.go:29:                             47: }        "}"
    parser_test.go:29:                             48: else     "else"
    parser_test.go:29:                             49: {        "{"
    parser_test.go:29:                             50: 
                "\n"
    parser_test.go:29:                             51: IDENTIFIER       "print"
    parser_test.go:29:                             52: (        "("
    parser_test.go:29:                             53: STRING   "\"fail\""
    parser_test.go:29:                             54: )        ")"
    parser_test.go:29:                             55: 
                "\n"
    parser_test.go:29:                             56: }        "}"
    parser_test.go:29:                             57: 
                "\n"
    parser_test.go:29:                             58: 
                "\n"
    parser_test.go:29:                             59: EOF      ""
--- PASS: TestParser_Basic (0.00s)
PASS