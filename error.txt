DEBUG DefineValue SKIPPED duplicate: "bool", kind=2
DEBUG: DefineValue ADDED: "bool" kind=2
DEBUG DefineValue SKIPPED duplicate: "list", kind=2
DEBUG: DefineValue ADDED: "list" kind=2
DEBUG DefineValue SKIPPED duplicate: "func", kind=2
DEBUG: DefineValue ADDED: "func" kind=2
DEBUG DefineValue SKIPPED duplicate: "int", kind=2
DEBUG: DefineValue ADDED: "int" kind=2
DEBUG DefineValue SKIPPED duplicate: "float", kind=2
DEBUG: DefineValue ADDED: "float" kind=2
DEBUG DefineValue SKIPPED duplicate: "string", kind=2
DEBUG: DefineValue ADDED: "string" kind=2
DEBUG DefineValue SKIPPED duplicate: "null", kind=2
DEBUG: DefineValue ADDED: "null" kind=2
DEBUG DefineValue SKIPPED duplicate: "tuple", kind=2
DEBUG: DefineValue ADDED: "tuple" kind=2
DEBUG DefineValue SKIPPED duplicate: "struct", kind=2
DEBUG: DefineValue ADDED: "struct" kind=2
DEBUG ENV TYPES after registration:[
"bool" "string" "null" "list" "func" "int" "float" "tuple" "struct" ]
Niftel REPL v0
>>> func greet(hi: string) -> string {
... return hi
... }
[REPL RAW BUFFER]
"func greet(hi: string) -> string {\nreturn hi\n}\n"
000: 'f' (102)
001: 'u' (117)
002: 'n' (110)
003: 'c' (99)
004: ' ' (32)
005: 'g' (103)
006: 'r' (114)
007: 'e' (101)
008: 'e' (101)
009: 't' (116)
010: '(' (40)
011: 'h' (104)
012: 'i' (105)
013: ':' (58)
014: ' ' (32)
015: 's' (115)
016: 't' (116)
017: 'r' (114)
018: 'i' (105)
019: 'n' (110)
020: 'g' (103)
021: ')' (41)
022: ' ' (32)
023: '-' (45)
024: '>' (62)
025: ' ' (32)
026: 's' (115)
027: 't' (116)
028: 'r' (114)
029: 'i' (105)
030: 'n' (110)
031: 'g' (103)
032: ' ' (32)
033: '{' (123)
034: '\n' (10)
035: 'r' (114)
036: 'e' (101)
037: 't' (116)
038: 'u' (117)
039: 'r' (114)
040: 'n' (110)
041: ' ' (32)
042: 'h' (104)
043: 'i' (105)
044: '\n' (10)
045: '}' (125)
046: '\n' (10)
DEBUG stms: []nifast.Stmt{(*nifast.FuncStmt)(0x14000124000)}
REPL: STATEMENT type: *nifast.FuncStmt
Defining function: greet
DEBUG: DefineValue ADDED: "greet" kind=1
DEBUG: DefineValue ADDED: "greet" kind=0
>>> greet("YOOOOO")
[REPL RAW BUFFER]
"greet(\"YOOOOO\")\n"
000: 'g' (103)
001: 'r' (114)
002: 'e' (101)
003: 'e' (101)
004: 't' (116)
005: '(' (40)
006: '"' (34)
007: 'Y' (89)
008: 'O' (79)
009: 'O' (79)
010: 'O' (79)
011: 'O' (79)
012: 'O' (79)
013: '"' (34)
014: ')' (41)
015: '\n' (10)
DEBUG stms: []nifast.Stmt{(*nifast.ExprStmt)(0x14000184010)}
REPL: STATEMENT type: *nifast.ExprStmt
CALLING Function: greet, args: [{{IDENTIFIER hi <nil> 1 13} {IDENTIFIER string <nil> 1 21}}]DEBUG: DefineValue ADDED: "hi" kind=0
DEBUG result: value.Value{Type:3, Data:"\"YOOOOO\"", Meta:(*value.TypeInfo)(nil)}
"YOOOOO"