DEBUG ENV TYPES after registration:[
"func" "null" "list" "bool" "tuple" "int" "float" "string" "struct" ]
Raw source string: "struct Person {\n    name: string\n    age: int\n}"
scanToken advanced: l.current=1 char="struct Person {\n    name: string\n    age: int\n}"
[ADVANCE] Current: struct (type=struct, line=1, lexeme="struct")[STATMENT] At: <nil> Current: struct (type=struct, line=1, lexeme="struct")scanToken advanced: l.current=8 char="struct Person {\n    name: string\n    age: int\n}"
[ADVANCE] Current: IDENTIFIER (type=IDENTIFIER, line=1, lexeme="Person")[AFTER SKIP NEW LINES] struct body: token IDENTIFIER lexem='Person' line='1'
scanToken advanced: l.current=15 char="struct Person {\n    name: string\n    age: int\n}"
[ADVANCE] Current: { (type={, line=1, lexeme="{")scanToken advanced: l.current=16 char="struct Person {\n    name: string\n    age: int\n}"
scanToken advanced: l.current=17 char="struct Person {\n    name: string\n    age: int\n}"
scanToken advanced: l.current=21 char="struct Person {\n    name: string\n    age: int\n}"
[ADVANCE] Current: IDENTIFIER (type=IDENTIFIER, line=2, lexeme="name")[AFTER OPENING '{' ] struct body: token IDENTIFIER lexem='name' line='2'
[Trying to check for 
 after '{' ] struct body: token IDENTIFIER lexem='name' line='2'
[PARSERLOOP] struct body: type=1  lexem='name' line='2'
scanToken advanced: l.current=25 char="struct Person {\n    name: string\n    age: int\n}"
[ADVANCE] Current: : (type=:, line=2, lexeme=":")scanToken advanced: l.current=27 char="struct Person {\n    name: string\n    age: int\n}"
[ADVANCE] Current: IDENTIFIER (type=IDENTIFIER, line=2, lexeme="string")parseTypeExpr: current token = {IDENTIFIER string <nil> 2 16}
scanToken advanced: l.current=33 char="struct Person {\n    name: string\n    age: int\n}"
scanToken advanced: l.current=34 char="struct Person {\n    name: string\n    age: int\n}"
scanToken advanced: l.current=38 char="struct Person {\n    name: string\n    age: int\n}"
[ADVANCE] Current: IDENTIFIER (type=IDENTIFIER, line=3, lexeme="age")[PARSERLOOP] struct body: type=1  lexem='age' line='3'
scanToken advanced: l.current=41 char="struct Person {\n    name: string\n    age: int\n}"
[ADVANCE] Current: : (type=:, line=3, lexeme=":")scanToken advanced: l.current=43 char="struct Person {\n    name: string\n    age: int\n}"
[ADVANCE] Current: IDENTIFIER (type=IDENTIFIER, line=3, lexeme="int")parseTypeExpr: current token = {IDENTIFIER int <nil> 3 12}
scanToken advanced: l.current=46 char="struct Person {\n    name: string\n    age: int\n}"
scanToken advanced: l.current=47 char="struct Person {\n    name: string\n    age: int\n}"
[ADVANCE] Current: } (type=}, line=4, lexeme="\n}")[ADVANCE] Current: EOF (type=EOF, line=4, lexeme="")warning: unsupported statement type: *nifast.StructStmt
