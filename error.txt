>>> func gree(hi: string) -> string {
... return hi 
... }
000: 'f' (102)
001: 'u' (117)
002: 'n' (110)
003: 'c' (99)
004: ' ' (32)
005: 'g' (103)
006: 'r' (114)
007: 'e' (101)
008: 'e' (101)
009: '(' (40)
010: 'h' (104)
011: 'i' (105)
012: ':' (58)
013: ' ' (32)
014: 's' (115)
015: 't' (116)
016: 'r' (114)
017: 'i' (105)
018: 'n' (110)
019: 'g' (103)
020: ')' (41)
021: ' ' (32)
022: '-' (45)
023: '>' (62)
024: ' ' (32)
025: 's' (115)
026: 't' (116)
027: 'r' (114)
028: 'i' (105)
029: 'n' (110)
030: 'g' (103)
031: ' ' (32)
032: '{' (123)
033: '\n' (10)
034: 'r' (114)
035: 'e' (101)
036: 't' (116)
037: 'u' (117)
038: 'r' (114)
039: 'n' (110)
040: ' ' (32)
041: 'h' (104)
042: 'i' (105)
043: '\n' (10)
044: '}' (125)
045: '\n' (10)
[ADVANCE] Current: IDENTIFIER (type=IDENTIFIER, line=1, lexeme="func gree(hi: string) -> string {\nreturn hi\n}\n")[STATMENT] At: IDENTIFIER Current: IDENTIFIER (type=1, line=func gree(hi: string) -> string {
return hi
}
, lexeme=%!q(MISSING))[ADVANCE] Current: EOF (type=EOF, line=1, lexeme="")Parser error: unexpected token '' as line 1