=== RUN   TestParser_Basic
    parser_test.go:32:                              0: 
        	"\n"
    parser_test.go:32:                              1: func	"func"
    parser_test.go:32:                              2: IDENTIFIER	"add"
    parser_test.go:32:                              3: (	"("
    parser_test.go:32:                              4: IDENTIFIER	"a"
    parser_test.go:32:                              5: :	":"
    parser_test.go:32:                              6: IDENTIFIER	"int"
    parser_test.go:32:                              7: ,	","
    parser_test.go:32:                              8: IDENTIFIER	"b"
    parser_test.go:32:                              9: :	":"
    parser_test.go:32:                             10: IDENTIFIER	"int"
    parser_test.go:32:                             11: )	")"
    parser_test.go:32:                             12: ->	"->"
    parser_test.go:32:                             13: IDENTIFIER	"int"
    parser_test.go:32:                             14: {	"{"
    parser_test.go:32:                             15: 
        	"\n"
    parser_test.go:32:                             16: return	"return"
    parser_test.go:32:                             17: IDENTIFIER	"a"
    parser_test.go:32:                             18: +	"+"
    parser_test.go:32:                             19: IDENTIFIER	"b"
    parser_test.go:32:                             20: 
        	"\n"
    parser_test.go:32:                             21: }	"}"
    parser_test.go:32:                             22: 
        	"\n"
    parser_test.go:32:                             23: var	"var"
    parser_test.go:32:                             24: IDENTIFIER	"result"
    parser_test.go:32:                             25: :	":"
    parser_test.go:32:                             26: IDENTIFIER	"int"
    parser_test.go:32:                             27: =	"="
    parser_test.go:32:                             28: IDENTIFIER	"add"
    parser_test.go:32:                             29: (	"("
    parser_test.go:32:                             30: NUMBER	"5"
    parser_test.go:32:                             31: ,	","
    parser_test.go:32:                             32: NUMBER	"3"
    parser_test.go:32:                             33: )	")"
    parser_test.go:32:                             34: 
        	"\n"
    parser_test.go:32:                             35: 
        	"\n"
    parser_test.go:32:                             36: if	"if"
    parser_test.go:32:                             37: IDENTIFIER	"result"
    parser_test.go:32:                             38: >	">"
    parser_test.go:32:                             39: NUMBER	"5"
    parser_test.go:32:                             40: {	"{"
    parser_test.go:32:                             41: 
        	"\n"
    parser_test.go:32:                             42: IDENTIFIER	"print"
    parser_test.go:32:                             43: (	"("
    parser_test.go:32:                             44: STRING	"\"success\""
    parser_test.go:32:                             45: )	")"
    parser_test.go:32:                             46: 
        	"\n"
    parser_test.go:32:                             47: 
        	"\n"
    parser_test.go:32:                             48: }	"}"
    parser_test.go:32:                             49: else	"else"
    parser_test.go:32:                             50: {	"{"
    parser_test.go:32:                             51: 
        	"\n"
    parser_test.go:32:                             52: IDENTIFIER	"print"
    parser_test.go:32:                             53: (	"("
    parser_test.go:32:                             54: STRING	"\"fail\""
    parser_test.go:32:                             55: )	")"
    parser_test.go:32:                             56: 
        	"\n"
    parser_test.go:32:                             57: }	"}"
    parser_test.go:32:                             58: 
        	"\n"
    parser_test.go:32:                             59: 
        	"\n"
    parser_test.go:32:                             60: EOF	""
    parser_test.go:39: Parser error: unexpected token '' as line 16
--- FAIL: TestParser_Basic (0.00s)
FAIL
FAIL	github.com/ithinkiborkedit/niftelv2.git/internal/parser	0.277s
FAIL
