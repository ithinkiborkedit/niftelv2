=== RUN   TestParser_Basic
    parser_test.go:31:                              0: 
                "\n"
    parser_test.go:31:                              1: func     "func"
    parser_test.go:31:                              2: IDENTIFIER       "add"
    parser_test.go:31:                              3: (        "("
    parser_test.go:31:                              4: IDENTIFIER       "a"
    parser_test.go:31:                              5: :        ":"
    parser_test.go:31:                              6: IDENTIFIER       "int"
    parser_test.go:31:                              7: ,        ","
    parser_test.go:31:                              8: IDENTIFIER       "b"
    parser_test.go:31:                              9: :        ":"
    parser_test.go:31:                             10: IDENTIFIER       "int"
    parser_test.go:31:                             11: )        ")"
    parser_test.go:31:                             12: ->       "->"
    parser_test.go:31:                             13: IDENTIFIER       "int"
    parser_test.go:31:                             14: {        "{"
    parser_test.go:31:                             15: 
                "\n"
    parser_test.go:31:                             16: return   "return"
    parser_test.go:31:                             17: IDENTIFIER       "a"
    parser_test.go:31:                             18: +        "+"
    parser_test.go:31:                             19: IDENTIFIER       "b"
    parser_test.go:31:                             20: 
                "\n"
    parser_test.go:31:                             21: }        "}"
    parser_test.go:31:                             22: 
                "\n"
    parser_test.go:31:                             23: var      "var"
    parser_test.go:31:                             24: IDENTIFIER       "result"
    parser_test.go:31:                             25: :        ":"
    parser_test.go:31:                             26: IDENTIFIER       "int"
    parser_test.go:31:                             27: =        "="
    parser_test.go:31:                             28: IDENTIFIER       "add"
    parser_test.go:31:                             29: (        "("
    parser_test.go:31:                             30: NUMBER   "5"
    parser_test.go:31:                             31: ,        ","
    parser_test.go:31:                             32: NUMBER   "3"
    parser_test.go:31:                             33: )        ")"
    parser_test.go:31:                             34: 
                "\n"
    parser_test.go:31:                             35: 
                "\n"
    parser_test.go:31:                             36: if       "if"
    parser_test.go:31:                             37: IDENTIFIER       "result"
    parser_test.go:31:                             38: >        ">"
    parser_test.go:31:                             39: NUMBER   "5"
    parser_test.go:31:                             40: {        "{"
    parser_test.go:31:                             41: 
                "\n"
    parser_test.go:31:                             42: IDENTIFIER       "print"
    parser_test.go:31:                             43: (        "("
    parser_test.go:31:                             44: STRING   "\"success\""
    parser_test.go:31:                             45: )        ")"
    parser_test.go:31:                             46: 
                "\n"
    parser_test.go:31:                             47: 
                "\n"
    parser_test.go:31:                             48: }        "}"
    parser_test.go:31:                             49: else     "else"
    parser_test.go:31:                             50: {        "{"
    parser_test.go:31:                             51: 
                "\n"
    parser_test.go:31:                             52: IDENTIFIER       "print"
    parser_test.go:31:                             53: (        "("
    parser_test.go:31:                             54: STRING   "\"fail\""
    parser_test.go:31:                             55: )        ")"
    parser_test.go:31:                             56: 
                "\n"
    parser_test.go:31:                             57: }        "}"
    parser_test.go:31:                             58: 
                "\n"
    parser_test.go:31:                             59: 
                "\n"
    parser_test.go:31:                             60: EOF      ""
TOkens: prev={
 
 6 1} cuurent={if if 7 3} next={IDENTIFIER result 7 10}